name: CI

on:
  push:
    branches: [main]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Format, Clippy & Build
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Check code formatting
        run: cargo fmt -- --check

      - name: Cargo sort
        run: |
          cargo install cargo-sort
          cargo sort --workspace --check

      - name: Run clippy
        run: cargo clippy --workspace --all-targets --all-features

      - name: Build
        run: cargo build

  swift-build-and-test:
    name: Build and Test Swift Bindings
    runs-on: macos-15
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Ensure a specific Xcode version is selected to match available simulators
      - name: Select Xcode 16.4
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.4"

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: aarch64-apple-ios-sim,aarch64-apple-ios,x86_64-apple-ios

      - name: Build and test Swift bindings
        run: ./swift/test_swift.sh

      - name: Install SwiftLint
        run: |
          brew install swiftlint

      - name: Lint Swift Tests
        run: swiftlint swift/tests

  test:
    name: Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run tests
        env:
          WORLDCHAIN_RPC_URL: ${{ secrets.WORLDCHAIN_RPC_URL || 'https://worldchain-mainnet.g.alchemy.com/public' }}
        run: |
          cp .env.example .env
          cargo test --all

  deny:
    name: Cargo deny
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources

    continue-on-error: ${{ matrix.checks == 'advisories' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          command: check ${{ matrix.checks }}
          rust-version: stable

  kotlin-build-and-test:
    name: Build and Test Kotlin Bindings
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Build and test Kotlin bindings
        run: ./kotlin/test_kotlin.sh

      - name: Install ktlint
        run: |
          curl -sSLO https://github.com/pinterest/ktlint/releases/latest/download/ktlint &&
          chmod a+x ktlint &&
          sudo mv ktlint /usr/local/bin/

      - name: Lint Kotlin Tests
        run: |

          ktlint kotlin/src/test
